server.port=${PORT:${SERVER_PORT:0}}
spring.application.name=ricette-seguite
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.instanceId=${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
spring.cloud.consul.discovery.healthCheckPath= /actuator/health
spring.cloud.consul.discovery.healthCheckInterval= 10s
spring.cloud.consul.discovery.healthCheckCriticalTimeout= 60s
spring.cloud.consul.discovery.queryPassing= true
spring.cloud.consul.discovery.loadbalancer.ribbon.enabled=  false 


spring.jpa.generate-ddl=true
logging.level.org.springframework.orm.jpa=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.asw.efood=DEBUG

# fa il logging dei comandi sql eseguiti 
#spring.jpa.show-sql=true
spring.jpa.show-sql=false
# disable OSIV
spring.jpa.open-in-view=false

# POSTGRESQL
spring.jpa.database=POSTGRESQL
# spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5434/ricetteseguiteservice
spring.datasource.username=postgres
spring.datasource.password=postgres
#spring.datasource.driver.class.name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
spring.jpa.hibernate.use-new-id-generator-mappings=true
# rimuove un warning noioso: see https://github.com/spring-projects/spring-boot/issues/12007
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# KAFKA
spring.kafka.bootstrap-servers=127.0.0.1:9092
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*